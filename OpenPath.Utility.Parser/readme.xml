<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenPath.Utility.Parser</name>
    </assembly>
    <members>
        <member name="T:OpenPath.Utility.Parser.CaseParser">
            <summary>
            The case parser does different casing options for strings. For example, it can title case,
            Pascal case and camel.
            </summary>
        </member>
        <member name="M:OpenPath.Utility.Parser.CaseParser.ToTitleCase(System.String,System.Boolean,System.String)">
            <summary>
            Converts a string to title case, captilizing every first word in string.
            </summary>
            <param name="value">The value of the string you want to convert to title case.</param>
            <param name="removeWhitespace">If true, will remove extra whitespace (Default: fault).</param>
            <param name="culture">Sets the local culture to base the conversion on (Default: "en-US", English).</param>
            <returns>The string converted to title case.</returns>
        </member>
        <member name="M:OpenPath.Utility.Parser.CaseParser.ToProperTitleCase(System.String,System.Boolean,System.String)">
            <summary>
            Converts a string to title case, captilizing words over three characters and I.
            </summary>
            <param name="value">The value of the string you want to convert to title case.</param>
            <param name="removeWhitespace">If true, will remove extra whitespace (Default: fault).</param>
            <param name="culture">Sets the local culture to base the conversion on (Default: "en-US", English).</param>
            <returns>The string converted to title case.</returns>
        </member>
        <member name="M:OpenPath.Utility.Parser.CaseParser.ToPascalCase(System.String)">
            <summary>
            Converts a string to a valid Pascal Cased code representation.
            </summary>
            <param name="value">The string to convert to Pascal Case.</param>
            <returns>Returns string as Pascal Case.</returns>
        </member>
        <member name="M:OpenPath.Utility.Parser.CaseParser.ToJsonCase(System.String)">
            <summary>
            Converts a string to format like JSON keys.
            (Example: This is my text converts to this_is_my_text)
            </summary>
            <param name="value">A string</param>
            <returns>A Json cased string</returns>
        </member>
        <member name="M:OpenPath.Utility.Parser.CaseParser.ToSentenceCase(System.String,System.Boolean)">
            <summary>
            Converts a string with no spaces to a sentence styled case. For example: PascalCase
            would return Pascal case and javascript_notation would return Javascript notation.
            </summary>
            <param name="value">The string you want to sentence case.</param>
            <param name="acceptNamespaceCase">If set to true will replace '.' with spaces (Default: False).</param>
            <returns>A sentence cased string.</returns>
        </member>
        <member name="T:OpenPath.Utility.Parser.CharacterParser">
            <summary>
            The CharacterParser contains extension methods for manipluating the characters in a string,
            such as removing all numbers or letters or punctuation from a string.
            </summary>
        </member>
        <member name="M:OpenPath.Utility.Parser.CharacterParser.ToLetters(System.String,System.Boolean)">
            <summary>
            Removes all puctuation and numbers from a string.
            </summary>
            <param name="value">String to remove numbers and puctuation from.</param>
            <param name="removeSpaces">Remove whitespace from result.</param>
            <returns>Returns letters only.</returns>
        </member>
        <member name="M:OpenPath.Utility.Parser.CharacterParser.ToNumbers(System.String,System.Boolean)">
            <summary>
            Removes all puctuation and letters from a string.
            </summary>
            <param name="value">String to remove letters and puctuation from.</param>
            /// <param name="removeSpaces">Remove whitespace from result.</param>
            <returns>Returns numbers only.</returns>
        </member>
        <member name="M:OpenPath.Utility.Parser.CharacterParser.ToLettersAndNumbers(System.String,System.Boolean)">
            <summary>
            Removes all puctuation from a string.
            </summary>
            <param name="value">String to puctuation from.</param>
            <param name="removeSpaces">Remove whitespace from result.</param>
            <returns>Returns letters numbers only.</returns>
        </member>
        <member name="T:OpenPath.Utility.Parser.WhitespaceParser">
            <summary>
            Extension methods for parsing whitespace from text.
            </summary>
        </member>
        <member name="M:OpenPath.Utility.Parser.WhitespaceParser.ReplaceWhitespace(System.String,System.String,System.Boolean)">
            <summary>
            Replaces all types of whitespace in a string and replaces them with a replacement value.
            </summary>
            <param name="value">The string you want to remove and replace whitespace from.</param>
            <param name="replacementValue">The value you want to replace the whitespace with (Default: " ").</param>
            <param name="includeSpaceRepresentations">Include representations like '-' and '_' (Default: false).</param>
            <returns>A string with no whitespace.</returns>
        </member>
        <member name="M:OpenPath.Utility.Parser.WhitespaceParser.RemoveWhitespace(System.String,System.Boolean)">
            <summary>
            Removes all types of whitespace in a string.
            </summary>
            <param name="value">The string you want to remove whitespace from.</param>
            <param name="includeSpaceRepresentations">Include representations like '-' and '_' (Default: false).</param>
            <returns></returns>
        </member>
    </members>
</doc>
